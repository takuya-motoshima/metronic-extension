{{!< default}}
{{#contentFor 'title'}}Dropzone{{/contentFor}}
{{#contentFor 'script'}}<script src="build/dropzone.js"></script>{{/contentFor}}
{{#contentFor 'sidenav'}}
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#overview" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Overview</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#reference" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Reference</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#basic" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Basic</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
{{/contentFor}}
<!--begin::Section-->
<div class="pb-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="overview" data-kt-scroll-offset="100">
    <a href="#overview"></a>Overview
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="my-5">
    Dropzone is a component that provides drag-and-drop file upload with image preview.
  </div>
  <!--end::Block-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="py-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="reference" data-kt-scroll-offset="100">
    <a href="#reference"></a>Reference
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="my-5">
    <!--begin::Heading-->
    <div class="fs-2 py-5">Instance Methods</div>
    <!--end::Heading-->
    <!--begin::Table wrapper-->
    <div class="table-responsive">
      <!--begin::Table-->
      <table class="table table-row-bordered mb-0 gy-5">
        <!--begin::Head-->
        <thead>
          <tr class="p-6">
            <th class="min-w-250px">Name</th>
            <th>Description</th>
          </tr>
        </thead>
        <!--end::Head-->
        <!--begin::Body-->
        <tbody>
          <tr>
            <td>
              <code>public constructor()</code>
            </td>
            <td>
              Create a new instance of the Dropzone class.
              <!--begin::Heading-->
              <h5 class="py-2 mb-0">Parameters:</h5>
              <!--end::Heading-->
              <!--begin::Parameters-->
              <ul>
                <li class="py-2"><code>element: string|HTMLElement|JQuery</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    HTMLElement selector, element, or JQuery object.
                  </div>
                  <!--end::Block-->
                </li>
                <li class="py-2"><code>options.hiddenInputContent?: HTMLInputElement</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    hidden element to store the uploaded content. For media data such as images and PDFs, DataURL is set; for text data such as CSV, text data is set.
                  </div>
                  <!--end::Block-->
                </li>
                <li class="py-2"><code>options.acceptedFiles?: string</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    A comma-separated list of MIME types or file extensions (e.g., &quot;image/*,application/pdf,.psd&quot;) for files that are allowed to be uploaded. Default is none (undefined).
                  </div>
                  <!--end::Block-->
                </li>
                <li class="py-2"><code>options.maxFilesize?: number</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    The maximum filesize (in bytes) that is allowed to be uploaded. Default is none (undefined).
                  </div>
                  <!--end::Block-->
                </li>
                <li class="py-2"><code>options.dictDefaultMessage?: string</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Drop zone title text. Default is &quot;Drop files here to upload&quot;.
                  </div>
                  <!--end::Block-->
                </li>
                <li class="py-2"><code>options.dictDescriptionMessage?: string</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Drop zone description text. Default is none (undefined).
                  </div>
                  <!--end::Block-->
                </li>
                <li class="py-2"><code>options.dictFileTooBig?: string</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Error message to be displayed if the file size exceeds the allowable size. <br>
                    Default is &quot;File is too big (\{{filesize}}MiB). Max filesize: \{{maxFilesize}}MiB.&quot;.<br>
                    &quot;\{{filesize}}&quot; is set to the selected file size, and &quot;\{{maxFilesize}}&quot; is set to the file size that can be uploaded.
                  </div>
                  <!--end::Block-->
                </li>
              </ul>
              <!--end::Parameters-->
              <!--begin::Highlight-->
              <div class="highlight">
                <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
                <div class="highlight-code">
                  <pre class="language-javascript">
                    <code class="language-javascript">import {components} from &#039;metronic-extension&#039;;

// Initializes Dropzone.
const dropzone = new components.Dropzone(document.getElementById(&#039;myDropzone&#039;), {
  hiddenInputContent: document.getElementById(&#039;myFileContent&#039;),
  maxFilesize: 10,
  dictDescriptionMessage: &#039;Files up to 10 MB can be uploaded&#039;,
  acceptedFiles: &#039;image/jpeg,image/png,image/gif&#039;,
});</code>
                  </pre>
                </div>
              </div>
              <!--end::Highlight-->
            </td>
          </tr>
          <tr>
            <td>
              <code>public onAddFile()</code>
            </td>
            <td>
              Sets the callback function to be called when a file is added. The callback function takes a file object.
              <!--begin::Heading-->
              <h5 class="py-2 mb-0">Parameters:</h5>
              <!--end::Heading-->
              <!--begin::Parameters-->
              <ul>
                <li class="py-2"><code>handler: (file: Dropzone.DropzoneFile) =&gt; void</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Callback function.
                  </div>
                  <!--end::Block-->
                </li>
              </ul>
              <!--end::Parameters-->
              <!--begin::Heading-->
              <h5 class="py-2 mb-0">Return:</h5>
              <!--end::Heading-->
              <!--begin::Return-->
              <ul class="list-style-none">
                <li class="py-2"><code>DropzoneComponent</code></li>
              </ul>
              <!--end::Return-->
              <!--begin::Highlight-->
              <div class="highlight">
                <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
                <div class="highlight-code">
                  <pre class="language-javascript">
                    <code class="language-javascript">// Called when a file is added.
dropzone.onAddFile(file =&gt; {
  alert(`From additional handlers. Select ${file.name}`);
});</code>
                  </pre>
                </div>
              </div>
              <!--end::Highlight-->
            </td>
          </tr>
          <tr>
            <td>
              <code>public onCancelFile()</code>
            </td>
            <td>
              Sets the callback function to be called when an uploaded file is canceled.
              <!--begin::Heading-->
              <h5 class="py-2 mb-0">Parameters:</h5>
              <!--end::Heading-->
              <!--begin::Parameters-->
              <ul>
                <li class="py-2"><code>handler: () =&gt; void</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Callback function.
                  </div>
                  <!--end::Block-->
                </li>
              </ul>
              <!--end::Parameters-->
              <!--begin::Heading-->
              <h5 class="py-2 mb-0">Return:</h5>
              <!--end::Heading-->
              <!--begin::Return-->
              <ul class="list-style-none">
                <li class="py-2"><code>DropzoneComponent</code></li>
              </ul>
              <!--end::Return-->
              <!--begin::Highlight-->
              <div class="highlight">
                <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
                <div class="highlight-code">
                  <pre class="language-javascript">
                    <code class="language-javascript">// Called when an uploaded file is canceled.
dropzone.onCancelFile(() =&gt; {
  alert(&#039;Canceled file selection&#039;);
});</code>
                  </pre>
                </div>
              </div>
              <!--end::Highlight-->
            </td>
          </tr>
        </tbody>
        <!--end::Body-->
      </table>
      <!--end::Table-->
    </div>
    <!--end::Table wrapper-->
  </div>
  <!--end::Block-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="py-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="basic" data-kt-scroll-offset="100">
    <a href="#basic"></a>Basic
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">Dropzone example with manual file attachment and upload controls.</div>
  <!--end::Block-->
  <!--begin::Block-->
  <div class="my-5">
    <div class="demonstration-block">
      <!--begin::Dropzone-->
      <div id="myDropzone"></div>
      <!--end::Dropzone-->
      <!--begin::DataURL of the selected file-->
      <input id="myFileContent" type="hidden">
      <!--end::DataURL of the selected file-->
    </div>
  </div>
  <!--end::Block-->
  <!--begin::Code-->
  <div class="my-5">
    <!--begin::Highlight-->
    <div class="highlight">
      <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
      <ul class="nav nav-pills" role="tablist">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#basic-html-tab" role="tab">HTML</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#basic-js-tab" role="tab">JAVASCRIPT</a></li>
      </ul>
      <!--begin::Tab content-->
      <div class="tab-content">
        <!--begin::Tab panel-->
        <div class="tab-pane fade show active" id="basic-html-tab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-html">
              <code class="language-html">&lt;!--begin::Dropzone--&gt;
&lt;div id=&quot;myDropzone&quot;&gt;&lt;/div&gt;
&lt;!--end::Dropzone--&gt;
&lt;!--begin::DataURL of the selected file--&gt;
&lt;input id=&quot;myFileContent&quot; type=&quot;hidden&quot;&gt;
&lt;!--end::DataURL of the selected file--&gt;</code>
            </pre>
          </div>
        </div>
        <!--end::Tab panel-->
        <!--begin::Tab panel-->
        <div class="tab-pane fade" id="basic-js-tab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript">
              <code class="language-javascript">import {components} from &#039;metronic-extension&#039;;

// Initializes Dropzone.
const dropzone = new components.Dropzone(document.getElementById(&#039;myDropzone&#039;), {
  hiddenInputContent: document.getElementById(&#039;myFileContent&#039;),
  maxFilesize: 10,
  dictDescriptionMessage: &#039;Files up to 10 MB can be uploaded&#039;,
  acceptedFiles: &#039;image/jpeg,image/png,image/gif&#039;,
});

// Initialize drag &amp; drop events.
dropzone
  .onAddFile(file =&gt; {
    // Called when a file is added.
    alert(`From additional handlers. Select ${file.name}`);
  })
  .onCancelFile(() =&gt; {
    // Called when an uploaded file is canceled.
    alert(&#039;Canceled file selection&#039;);
  });</code>
            </pre>
          </div>
        </div>
        <!--end::Tab panel-->
      </div>
      <!--end::Tab content-->
    </div>
    <!--end::Highlight-->
  </div>
  <!--end::Code-->
</div>
<!--end::Section-->