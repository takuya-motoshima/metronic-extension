{{!< default}}
{{#contentFor 'title'}}Tagify{{/contentFor}}
{{#contentFor 'script'}}<script src="build/tagify.js"></script>{{/contentFor}}
{{#contentFor 'sidenav'}}
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#overview" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Overview</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#reference" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Reference</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#basicExample" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Basic Example</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#readonlyExample" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Read-only</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#inlineSuggestionsExample" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">Inline Suggestions</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
<!--begin::Item-->
<li class="menu-item py-2 px-3">
  <!--begin::Link-->
  <a href="#listSuggestionsExample" data-kt-scroll-toggle="true" class="menu-link p-0 nav-link">
    <span class="menu-bullet">
      <span class="bullet bullet-dot"></span>
    </span>
    <span class="menu-title">List Suggestions</span>
  </a>
  <!--end::Link-->
</li>
<!--end::Item-->
{{/contentFor}}
<!--begin::Section-->
<div class="pb-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="overview" data-kt-scroll-offset="100">
    <a href="#overview"></a>Overview
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="my-5">
    Tag input component based on <a href="https://yaireo.github.io/tagify/" target="_blank">tagify</a>.
  </div>
  <!--end::Block-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="py-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="reference" data-kt-scroll-offset="100">
    <a href="#reference"></a>Reference
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="my-5">
    <!--begin::Heading-->
    <div class="fs-2 py-5">Instance methods</div>
    <!--end::Heading-->
    <!--begin::Table wrapper-->
    <div class="table-responsive">
      <!--begin::Table-->
      <table class="table table-row-bordered mb-0 gy-5">
        <!--begin::Head-->
        <thead>
          <tr class="p-6">
            <th class="min-w-250px">Name</th>
            <th>Description</th>
          </tr>
        </thead>
        <!--end::Head-->
        <!--begin::Body-->
        <tbody>
          <tr>
            <td>
              <code>public constructor()</code>
            </td>
            <td>
              Create a new instance of the Tagify class.<br>
              See <a href="https://yaireo.github.io/tagify/" target="_blank">tagify documentation</a> for options not listed here.
              <!--begin::Heading-->
              <div class="py-3 text-gray-700">Parameters:</div>
              <!--end::Heading-->
              <!--begin::Parameters-->
              <ul>
                <li class="py-2"><code>element: string|HTMLInputElement|HTMLTextAreaElement|JQuery</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    HTMLInputElement or HTMLTextAreaElement selector, element, or JQuery object.
                  </div>
                  <!--end::Block-->
                </li>
                <li class="py-2"><code>options.maxChars?: number</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Maximum length of tag input. This is a proprietary option and not a tagify option. The default is no limit (undefined).
                  </div>
                  <!--end::Block-->
                </li>
                <li class="py-2"><code>options.readonly?: number</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Read-only. This is a proprietary option, not a tagify option. Default is false.
                  </div>
                  <!--end::Block-->
                </li>
              </ul>
              <!--end::Parameters-->
              <!--begin::Highlight-->
              <div class="highlight">
                <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
                <div class="highlight-code">
                  <pre class="language-javascript">
                    <code class="language-javascript">import {Tagify} from &#039;metronic-extension&#039;;

// Initialize Tagify.
new Tagify(document.getElementById(&#039;basicTagify&#039;));

// Read-only.
new Tagify(document.getElementById(&#039;readonlyTagify&#039;), {readonly: true});

// Inline Suggestions.
new Tagify(document.getElementById(&#039;inlineSuggestionsTagify&#039;), {
  whitelist: [&#039;tag1&#039;, &#039;tag2&#039;, &#039;tag3&#039;, &#039;tag4&#039;, &#039;tag5&#039;, &#039;tag6&#039;, &#039;tag7&#039;],
  dropdown: {
    maxItems: 20,
    classname: &#039;tagify__inline__suggestions&#039;,
  }
});

// List Suggestions.
new Tagify(document.getElementById(&#039;listSuggestionsTagify&#039;), {
  whitelist: [&#039;tag1&#039;, &#039;tag2&#039;, &#039;tag3&#039;, &#039;tag4&#039;, &#039;tag5&#039;, &#039;tag6&#039;, &#039;tag7&#039;],
  dropdown: {maxItems: 20},
});</code>
                  </pre>
                </div>
              </div>
              <!--end::Highlight-->
            </td>
          </tr>
          <tr>
            <td>
              <code>public addTags()</code>
            </td>
            <td>
              Add one or more tags.
              <!--begin::Heading-->
              <div class="py-3 text-gray-700">Parameters:</div>
              <!--end::Heading-->
              <!--begin::Parameters-->
              <ul>
                <li class="py-2"><code>tags: string|string[]|T[]</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Tags to add. When a string, it can be either a single word or multiple words separated with a delimiter.
                  </div>
                  <!--end::Block-->
                </li>
                <li class="py-2"><code>clearInput?: boolean</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    If true, the input&#039;s value gets cleared after adding tags. Default is false.
                  </div>
                  <!--end::Block-->
                </li>
                <li class="py-2"><code>skipInvalid?: boolean</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    If true, do not add, mark &amp; remove invalid tags. Default is true.
                  </div>
                  <!--end::Block-->
                </li>
              </ul>
              <!--end::Parameters-->
              <!--begin::Heading-->
              <div class="py-3 text-gray-700">Return value:</div>
              <!--end::Heading-->
              <!--begin::Return-->
              <ul class="list-style-none">
                <li class="py-2"><code>HTMLElement[]</code> List of HTML elements representing the tags that were added.</li>
              </ul>
              <!--end::Return-->
              <!--begin::Highlight-->
              <div class="highlight">
                <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
                <div class="highlight-code">
                  <pre class="language-javascript">
                    <code class="language-javascript">// Add one tag.
tagify.addTags(&#039;tag4&#039;);

// Add multiple tags at once.
tagify.addTags([&#039;tag5&#039;, &#039;tag6&#039;]);</code>
                  </pre>
                </div>
              </div>
              <!--end::Highlight-->
            </td>
          </tr>
          <tr>
            <td>
              <code>public removeAllTags()</code>
            </td>
            <td>
              Removes all tags and resets the original input tag's value property.
            </td>
          </tr>
          <tr>
            <td>
              <code>public setReadonly()</code>
            </td>
            <td>
              Switches read-only mode on or off.
              <!--begin::Heading-->
              <div class="py-3 text-gray-700">Parameters:</div>
              <!--end::Heading-->
              <!--begin::Parameters-->
              <ul>
                <li class="py-2"><code>readonly: boolean</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    true to switch the tagify instance to read-only mode, false to switch off read-only mode.
                  </div>
                  <!--end::Block-->
                </li>
              </ul>
              <!--end::Parameters-->
            </td>
          </tr>
          <tr>
            <td>
              <code>public onAddTag()</code>
            </td>
            <td>
              Sets the callback function to be called when a tag is added.
              <!--begin::Heading-->
              <div class="py-3 text-gray-700">Parameters:</div>
              <!--end::Heading-->
              <!--begin::Parameters-->
              <ul>
                <li class="py-2"><code>handler: (evnt: Tagify.AddEventData) =&gt; void</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Callback function.
                  </div>
                  <!--end::Block-->
                </li>
              </ul>
              <!--end::Parameters-->
              <!--begin::Heading-->
              <div class="py-3 text-gray-700">Return value:</div>
              <!--end::Heading-->
              <!--begin::Return-->
              <ul class="list-style-none">
                <li class="py-2"><code>Tagify</code></li>
              </ul>
              <!--end::Return-->
              <!--begin::Highlight-->
              <div class="highlight">
                <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
                <div class="highlight-code">
                  <pre class="language-javascript">
                    <code class="language-javascript">tagify.onAddTag(evnt =&gt; {
  console.log(&#039;Tag added&#039;);
});</code>
                  </pre>
                </div>
              </div>
              <!--end::Highlight-->
            </td>
          </tr>
          <tr>
            <td>
              <code>public onRemoveTag()</code>
            </td>
            <td>
              Sets the callback function to be called when a tag is removed.
              <!--begin::Heading-->
              <div class="py-3 text-gray-700">Parameters:</div>
              <!--end::Heading-->
              <!--begin::Parameters-->
              <ul>
                <li class="py-2"><code>handler: (evnt: Tagify.RemoveEventData) =&gt; void</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Callback function.
                  </div>
                  <!--end::Block-->
                </li>
              </ul>
              <!--end::Parameters-->
              <!--begin::Heading-->
              <div class="py-3 text-gray-700">Return value:</div>
              <!--end::Heading-->
              <!--begin::Return-->
              <ul class="list-style-none">
                <li class="py-2"><code>Tagify</code></li>
              </ul>
              <!--end::Return-->
              <!--begin::Highlight-->
              <div class="highlight">
                <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
                <div class="highlight-code">
                  <pre class="language-javascript">
                    <code class="language-javascript">tagify.onRemoveTag(evnt =&gt; {
  console.log(&#039;Tag has been deleted&#039;);
});</code>
                  </pre>
                </div>
              </div>
              <!--end::Highlight-->
            </td>
          </tr>
          <tr>
            <td>
              <code>public onChangeTag()</code>
            </td>
            <td>
              Sets the callback function to be called when the tag is modified.
              <!--begin::Heading-->
              <div class="py-3 text-gray-700">Parameters:</div>
              <!--end::Heading-->
              <!--begin::Parameters-->
              <ul>
                <li class="py-2"><code>handler: (evnt: Tagify.AddEventData|Tagify.RemoveEventData) =&gt; void</code>
                  <!--begin::Block-->
                  <div class="pt-3">
                    Callback function.
                  </div>
                  <!--end::Block-->
                </li>
              </ul>
              <!--end::Parameters-->
              <!--begin::Heading-->
              <div class="py-3 text-gray-700">Return value:</div>
              <!--end::Heading-->
              <!--begin::Return-->
              <ul class="list-style-none">
                <li class="py-2"><code>Tagify</code></li>
              </ul>
              <!--end::Return-->
              <!--begin::Highlight-->
              <div class="highlight">
                <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
                <div class="highlight-code">
                  <pre class="language-javascript">
                    <code class="language-javascript">tagify.onChangeTag(evnt =&gt; {
  console.log(&#039;Tag has been changed&#039;);
});</code>
                  </pre>
                </div>
              </div>
              <!--end::Highlight-->
            </td>
          </tr>
          <tr>
            <td>
              <code>public dispose()</code>
            </td>
            <td>
              Reverts the input element back as it was before Tagify was applied.
            </td>
          </tr>
        </tbody>
        <!--end::Body-->
      </table>
      <!--end::Table-->
    </div>
    <!--end::Table wrapper-->
  </div>
  <!--end::Block-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="py-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="basicExample" data-kt-scroll-offset="100">
    <a href="#basicExample"></a>Basic Example
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">Basic example of Tagify attached to an input element.</div>
  <!--end::Block-->
  <!--begin::Block-->
  <div class="my-5">
    <div class="demonstration-block">
      <!--begin::Tagify-->
      <input id="basicTagify" class="form-control form-control-solid" value="tag1,tag2,tag3" />
      <!--end::Tagify-->
    </div>
  </div>
  <!--end::Block-->
  <!--begin::Code-->
  <div class="my-5">
    <!--begin::Highlight-->
    <div class="highlight">
      <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
      <ul class="nav nav-pills" role="tablist">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#basicExampleHtmlTab" role="tab">HTML</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#basicExampleJsTab" role="tab">JAVASCRIPT</a></li>
      </ul>
      <!--begin::Tab content-->
      <div class="tab-content">
        <!--begin::Tab panel-->
        <div class="tab-pane fade show active" id="basicExampleHtmlTab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-html">
              <code class="language-html">&lt;!--begin::Tagify--&gt;
&lt;input id=&quot;basicTagify&quot; class=&quot;form-control form-control-solid&quot; value=&quot;tag1,tag2,tag3&quot; /&gt;
&lt;!--end::Tagify--&gt;</code>
            </pre>
          </div>
        </div>
        <!--end::Tab panel-->
        <!--begin::Tab panel-->
        <div class="tab-pane fade" id="basicExampleJsTab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript">
              <code class="language-javascript">import {Tagify} from &#039;metronic-extension&#039;;

// Initialize Tagify.
const basicTagify = new Tagify(document.getElementById(&#039;basicTagify&#039;));

// Set callback functions for various operations.
basicTagify
  .onAddTag(evnt =&gt; {
    // Tag added.
    console.log(&#039;Tag added&#039;);
  })
  .onRemoveTag(evnt =&gt; {
    // Tag removed.
    console.log(&#039;Tag has been deleted&#039;);
  })
  .onChangeTag(evnt =&gt; {
    // Tag was changed.
    console.log(&#039;Tag has been changed&#039;);
  });</code>
            </pre>
          </div>
        </div>
        <!--end::Tab panel-->
      </div>
      <!--end::Tab content-->
    </div>
    <!--end::Highlight-->
  </div>
  <!--end::Code-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="py-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="readonlyExample" data-kt-scroll-offset="100">
    <a href="#readonlyExample"></a>Read-only
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">If the <code>readonly</code> option is set to <code>true</code>, the Tagify will be read-only.</div>
  <!--end::Block-->
  <!--begin::Block-->
  <div class="my-5">
    <div class="demonstration-block">
      <input id="readonlyTagify" class="form-control form-control-solid" value="tag1,tag2,tag3" />
    </div>
  </div>
  <!--end::Block-->
  <!--begin::Code-->
  <div class="my-5">
    <!--begin::Highlight-->
    <div class="highlight">
      <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
      <ul class="nav nav-pills" role="tablist">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#readonlyExampleHtmlTab" role="tab">HTML</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#readonlyExampleJsTab" role="tab">JAVASCRIPT</a></li>
      </ul>
      <!--begin::Tab content-->
      <div class="tab-content">
        <!--begin::Tab panel-->
        <div class="tab-pane fade show active" id="readonlyExampleHtmlTab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-html">
              <code class="language-html">&lt;input id=&quot;readonlyTagify&quot; class=&quot;form-control form-control-solid&quot; value=&quot;tag1,tag2,tag3&quot; /&gt;</code>
            </pre>
          </div>
        </div>
        <!--end::Tab panel-->
        <!--begin::Tab panel-->
        <div class="tab-pane fade" id="readonlyExampleJsTab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript">
              <code class="language-javascript">import {Tagify} from &#039;metronic-extension&#039;;

// Read-only.
new Tagify(document.getElementById(&#039;readonlyTagify&#039;), {readonly: true});</code>
            </pre>
          </div>
        </div>
        <!--end::Tab panel-->
      </div>
      <!--end::Tab content-->
    </div>
    <!--end::Highlight-->
  </div>
  <!--end::Code-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="py-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="inlineSuggestionsExample" data-kt-scroll-offset="100">
    <a href="#inlineSuggestionsExample"></a>Inline Suggestions
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">When Tagify has the focus, inline-style suggestions appear immediately.</div>
  <!--end::Block-->
  <!--begin::Block-->
  <div class="my-5">
    <div class="demonstration-block">
      <input id="inlineSuggestionsTagify" class="form-control form-control-solid" value="tag1,tag2,tag3" />
    </div>
  </div>
  <!--end::Block-->
  <!--begin::Code-->
  <div class="my-5">
    <!--begin::Highlight-->
    <div class="highlight">
      <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
      <ul class="nav nav-pills" role="tablist">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#inlineSuggestionsExampleHtmlTab" role="tab">HTML</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#inlineSuggestionsExampleJsTab" role="tab">JAVASCRIPT</a></li>
      </ul>
      <!--begin::Tab content-->
      <div class="tab-content">
        <!--begin::Tab panel-->
        <div class="tab-pane fade show active" id="inlineSuggestionsExampleHtmlTab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-html">
              <code class="language-html">&lt;input id=&quot;inlineSuggestionsTagify&quot; class=&quot;form-control form-control-solid&quot; value=&quot;tag1,tag2,tag3&quot; /&gt;</code>
            </pre>
          </div>
        </div>
        <!--end::Tab panel-->
        <!--begin::Tab panel-->
        <div class="tab-pane fade" id="inlineSuggestionsExampleJsTab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript">
              <code class="language-javascript">import {Tagify} from &#039;metronic-extension&#039;;

// Inline Suggestions.
new Tagify(document.getElementById(&#039;inlineSuggestionsTagify&#039;), {
  whitelist: [&#039;tag1&#039;, &#039;tag2&#039;, &#039;tag3&#039;, &#039;tag4&#039;, &#039;tag5&#039;, &#039;tag6&#039;, &#039;tag7&#039;],
  dropdown: {
    maxItems: 20,
    classname: &#039;tagify__inline__suggestions&#039;,
  }
});</code>
            </pre>
          </div>
        </div>
        <!--end::Tab panel-->
      </div>
      <!--end::Tab content-->
    </div>
    <!--end::Highlight-->
  </div>
  <!--end::Code-->
</div>
<!--end::Section-->
<!--begin::Section-->
<div class="py-10">
  <!--begin::Heading-->
  <h1 class="anchor fw-bold mb-5" id="listSuggestionsExample" data-kt-scroll-offset="100">
    <a href="#listSuggestionsExample"></a>List Suggestions
  </h1>
  <!--end::Heading-->
  <!--begin::Block-->
  <div class="py-5">When Tagify has the focus, list-style suggestions appear immediately.</div>
  <!--end::Block-->
  <!--begin::Block-->
  <div class="my-5">
    <div class="demonstration-block">
      <input id="listSuggestionsTagify" class="form-control form-control-solid" value="tag1,tag2,tag3" />
    </div>
  </div>
  <!--end::Block-->
  <!--begin::Code-->
  <div class="my-5">
    <!--begin::Highlight-->
    <div class="highlight">
      <button class="highlight-copy btn" data-bs-toggle="tooltip" title="Copy code">copy</button>
      <ul class="nav nav-pills" role="tablist">
        <li class="nav-item"><a class="nav-link active" data-bs-toggle="tab" href="#listSuggestionsExampleHtmlTab" role="tab">HTML</a></li>
        <li class="nav-item"><a class="nav-link" data-bs-toggle="tab" href="#listSuggestionsExampleJsTab" role="tab">JAVASCRIPT</a></li>
      </ul>
      <!--begin::Tab content-->
      <div class="tab-content">
        <!--begin::Tab panel-->
        <div class="tab-pane fade show active" id="listSuggestionsExampleHtmlTab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-html">
              <code class="language-html">&lt;input id=&quot;listSuggestionsTagify&quot; class=&quot;form-control form-control-solid&quot; value=&quot;tag1,tag2,tag3&quot; /&gt;</code>
            </pre>
          </div>
        </div>
        <!--end::Tab panel-->
        <!--begin::Tab panel-->
        <div class="tab-pane fade" id="listSuggestionsExampleJsTab" role="tabpanel">
          <div class="highlight-code">
            <pre class="language-javascript">
              <code class="language-javascript">import {Tagify} from &#039;metronic-extension&#039;;

// List Suggestions.
new Tagify(document.getElementById(&#039;listSuggestionsTagify&#039;), {
  whitelist: [&#039;tag1&#039;, &#039;tag2&#039;, &#039;tag3&#039;, &#039;tag4&#039;, &#039;tag5&#039;, &#039;tag6&#039;, &#039;tag7&#039;],
  dropdown: {maxItems: 20},
});</code>
            </pre>
          </div>
        </div>
        <!--end::Tab panel-->
      </div>
      <!--end::Tab content-->
    </div>
    <!--end::Highlight-->
  </div>
  <!--end::Code-->
</div>
<!--end::Section-->